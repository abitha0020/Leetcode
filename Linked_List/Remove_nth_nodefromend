class ListNode:
    def __init__(self, value=0, next=None):
        self.value = value
        self.next = next

def remove_nth_from_end(head, n):
    first = head
    second = head

    # Move first pointer `n + 1` steps ahead
    for _ in range(n+1):
        first = first.next

    # Move both first and second until first reaches the end
    while first:
        first = first.next
        second = second.next

    # Remove the nth node
    second.next = second.next.next
    
    return head

# Example usage:
def print_list(head):
    while head:
        print(head.value, end=" -> ")
        head = head.next
    print("None")

# Creating the linked list: 1 -> 2 -> 3 -> 4 -> 5
head = ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5)))))
n = 3

print("Original List:")
print_list(head)

head = remove_nth_from_end(head, n)
print(f"List after removing {n}th node from the end:")
print_list(head)  # Output: 1 -> 2 -> 3 -> 5 -> None
